#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 7.6
#  in conjunction with Tcl version 8.6
#    Dec 22, 2022 04:21:03 PM CST  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
from tkinter import filedialog
from tkinter import messagebox
import list_mac
import read_write_csv as rw_csv
import copy
import edge_open_app as ea
import time

_debug = True # False to eliminate debug printing from callback functions.
mclass = rw_csv.read_csv()
mList = []
file_name1 = ""
file_name2 = ""
column_name = ""

def main(*args):
    '''Main entry point for the application.'''
    global root
    root = tk.Tk()
    root.protocol( 'WM_DELETE_WINDOW' , root.destroy)
    # Creates a toplevel widget.
    global _top1, _w1
    _top1 = root
    _w1 = list_mac.Toplevel1(_top1)
    set_list_mac_option()       #  將按鈕連接各自功能的function
    root.mainloop()

def choose_file1():
    
    file_path = filedialog.askopenfilename()

    if not file_path:
        messagebox.showerror("FilePathNull","找不到檔案!")
        print("Choose file canceled.")
    else:
        file_name1 = file_path.split("/")[-1]
        #  print( file_name )
        _w1.Label_filename1.configure(text=file_name1)      #  顯示在螢幕上的檔案名稱
        mclass.set_file_name(file_path,1)
    
def choose_file2():
    
    file_path = filedialog.askopenfilename()
    if not file_path:
        messagebox.showerror("FilePathNull","找不到檔案!")
        print("Choose file canceled.")
    else:
        file_name2 = file_path.split("/")[-1]
        _w1.Label_filename2.configure(text=file_name2)      #  顯示在螢幕上的檔案名稱
        mclass.set_file_name(file_path,2)

def product_mac_list():

    mList = copy.deepcopy(mclass.run(1))        #  將篩選後的list複製給mList

    if len(mList) == 0:
        messagebox.showerror("ListNull","資料讀取錯誤!")
    else:
        print("mList:",len(mList)) 
        messagebox.showinfo("完成","輸出MAC列表完成,檔案名稱:output.csv")
    
def set_list_mac_option():
    _w1.Button1.configure(command=choose_file1)
    _w1.Button2.configure(command=choose_file2)
    _w1.Button_createList.configure(command=product_mac_list)
    _w1.Button_Result.configure(command=combine_file_to_output)
    _w1.Text_cloumnName.insert("end","Comment")
    _w1.Button3.configure(command=auto)
    

def combine_file_to_output():
    column_name = _w1.Text_cloumnName.get("1.0",tk.END).strip()  #  將輸入框的文字去掉空白後存成一個string供程式比對用
    
    #  for i in column_name:
    #      print(i)
    # print(column_name)
    # print(type(column_name))
    # print("Length=", len(column_name))

    if mclass.combine_forescout_file( column_name ):
        print("輸出完成,檔案名稱:output2.csv")
        messagebox.showinfo("完成","輸出完成,檔案名稱:output2.csv")

    else:
        print("無特定欄位，請重新確認原始資料或是調整要查詢的欄位名稱。")
        messagebox.showerror("ColumnNameNotFound", "無特定欄位，請重新確認原始資料或是調整要查詢的欄位名稱。")

def auto():

    time_start = time.perf_counter()
    column_name = _w1.Text_cloumnName.get("1.0",tk.END).strip()

    mList = copy.deepcopy(mclass.run(2))
    if len(mList) == 0:
        messagebox.showerror("ListNull","資料讀取錯誤!")
        return False 

    total_num = len( mList )
    group = int( total_num / 100 )
    rest_count = total_num % 100

    #  print("共有{0}筆資料，group={1}，rest_count={2}".format(total_num,group,rest_count))

    str_tmp = []
    str_tmp2 = []
    mac_names_list = []

    start_pos = 0

    #  此網站一次只能查詢100筆資料
    
    for i in range(1,group+1):
        end_pos = i * 100 - 1

        #  print( "{0} ~ {1}".format(start_pos,end_pos) )

        for j in range(start_pos,end_pos+1):
            str_tmp.append( mList[j] )

        str_tmp2 = ea.run_with_edge(str_tmp)
        for j in range(0,len(str_tmp2)):
            mac_names_list.append( str_tmp2[j] )

        start_pos = end_pos + 1
        str_tmp.clear()

    end_pos += rest_count
    #  print( "{0} ~ {1}".format(start_pos,end_pos) )

    for j in range( start_pos, end_pos+1 ):
        str_tmp.append( mList[j] )

    str_tmp2 = ea.run_with_edge(str_tmp)
    for j in range(0,len(str_tmp2)):
        mac_names_list.append( str_tmp2[j] )

    # index = 1
    # for cur_data in mac_names_list:
    #     print("{0}: {1}".format(index,cur_data))
    #     index += 1

    mclass.output_mac_list_with_names(mList,mac_names_list)

    if mclass.combine_forescout_file_with_two_lists(mList,mac_names_list,column_name):
        messagebox.showinfo("完成","輸出完成,檔案名稱:output2.csv")

    else:
        messagebox.showerror("ColumnNameNotFound", "找不到輸入的欄位，請重新確認原始資料或是調整要查詢的欄位名稱。")

    time_end = time.perf_counter()

    total_time = time_end - time_start
    minute = int(total_time / 60)
    second = round( total_time % 60, 2 )

    if minute != 0:
        messagebox.showinfo( "finish","總共花了{min}分{sec}秒".format( min=minute,sec=second ) )
    else:    
        messagebox.showinfo( "finish","總共花了{sec}秒".format( sec=second ) )

if __name__ == '__main__':
    list_mac.start_up()
